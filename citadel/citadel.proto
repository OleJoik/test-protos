syntax = "proto3";

package citadel;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "geohub.io/protos/citadel";

message OrganizationCreate { string name = 1; }

message ProjectCreate {
  string name = 1;
  string externalId = 2;
}

message Project {
  string id = 1;         // Unique identifier
  string name = 2;       // The name of the project
  string externalId = 3; // internal identifier, e.g. '20231234'
}

message ProjectGet { string id = 1; }

service CitadelService {
  rpc GetProject(ProjectGet) returns (Project) {
    option (google.api.http) = {
      get : "/project/{id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "OAuth2";
          value: {
            scope: "read";
            scope: "write";
          }
        }
      }
    };
  }

  rpc CreateProject(ProjectCreate) returns (ProjectCreate) {
    option (google.api.http) = {
      post : "/project"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "OAuth2";
          value: {
            scope: "read";
            scope: "write";
          }
        }
      }
    };
  }

  rpc CreateOrganization(ProjectCreate) returns (ProjectCreate) {
    option (google.api.http) = {
      post : "/organization"
      body : "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "OAuth2";
          value: {
            scope: "read";
            scope: "write";
          }
        }
      }
    };
  }
}